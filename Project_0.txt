a) Experience Installing Nachos
I used SSH extension on VS code to connect to the wolf server of FIU. Then, downloaded the Nachos source code from the link on canvas. During installation, I faced with several issues like outdated bool.h dependency and incorrect paths to system headers (like, stdarg.h). I edited utility.h file to remove the bool.h dependency. Also, I checked the environment variables like LD_LIBRARY_PATH were correctly set and verified that make and gcc were available on the server. After that, I re-extracted the source code and then using make the project was compiled.
b) Experience with the Tests
For testing, I ran the Threads Demo in the threads directory. the output of this test showed two threads (thread 0 and thread 1) which were looping 5 times each. then I ran the User Program Demo using halt program in the test directory. this test showed me "Machine halting!". I also used the -s flag to run nachos in single-step mode. Each test provide expected results.
c) Description of the Thread Class
The thread class, manages the life cycle of kernel-level threads, which also enable mutitasking. this class can track thread's state, such as JUST_CREATED, RUNNING, READY, or BLOCKED which works with the scheduler to switch between threads as needed. this class includes methods like Fork, Yield, Sleep, Finish. Fork can creates a new thread and assigns it a function to execute, Yield allows the CPU to be used by another thread, Sleep pauses the thread and removes it from the ready queue and Finish cleans up resources once a thread has completed its task. Each of the thread maintains own stack and saves its machine state to facilitate context switching. In user mode, the thread also manages user registers and an AddrSpace for virtual memory.

